<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zjgsu.irunner.mapper.CommunityMapper">

    <resultMap id="CommunityResultMap" type="Community">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="image_url" property="imageUrl"/>
        <result column="member_count" property="memberCount"/>
        <result column="created_by" property="createdBy"/>
        <result column="created_at" property="createdAt"/>
        <result column="is_public" property="isPublic"/>

        <!-- 关联成员列表 -->
        <collection property="members" ofType="User"
                    select="selectMembersByCommunityId"
                    column="id"/>
    </resultMap>

    <resultMap id="UserSimpleResultMap" type="User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="nick_name" property="nickName"/>
        <result column="avatar_url" property="avatarUrl"/>
    </resultMap>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO communities (
        name, description, image_url, member_count, created_by, created_at, is_public
        ) VALUES (
        #{name}, #{description}, #{imageUrl}, #{memberCount},
        #{createdBy}, #{createdAt}, #{isPublic}
        )
    </insert>

    <select id="selectById" resultMap="CommunityResultMap">
        SELECT * FROM communities WHERE id = #{id}
    </select>

    <select id="selectByName" resultMap="CommunityResultMap">
        SELECT * FROM communities WHERE name = #{name}
    </select>

    <select id="selectPublicCommunities" resultMap="CommunityResultMap">
        SELECT * FROM communities
        WHERE is_public = true
        ORDER BY member_count DESC
    </select>

    <select id="selectByKeyword" resultMap="CommunityResultMap">
        SELECT * FROM communities
        WHERE name LIKE CONCAT('%', #{keyword}, '%')
        OR description LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY member_count DESC
    </select>

    <select id="selectByUserId" resultMap="CommunityResultMap">
        SELECT c.* FROM communities c
        INNER JOIN user_community uc ON c.id = uc.community_id
        WHERE uc.user_id = #{userId}
        ORDER BY c.member_count DESC
    </select>

    <select id="selectMembersByCommunityId" resultMap="UserSimpleResultMap">
        SELECT u.id, u.username, u.nick_name, u.avatar_url
        FROM users u
        INNER JOIN user_community uc ON u.id = uc.user_id
        WHERE uc.community_id = #{id}
        ORDER BY u.username ASC
    </select>

    <update id="update">
        UPDATE communities
        SET name = #{name},
        description = #{description},
        image_url = #{imageUrl},
        member_count = #{memberCount},
        is_public = #{isPublic}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM communities WHERE id = #{id}
    </delete>

    <update id="incrementMemberCount">
        UPDATE communities
        SET member_count = member_count + 1
        WHERE id = #{id}
    </update>

    <update id="decrementMemberCount">
        UPDATE communities
        SET member_count = GREATEST(member_count - 1, 0)
        WHERE id = #{id}
    </update>

    <select id="selectMemberCount" resultType="Integer">
        SELECT member_count FROM communities WHERE id = #{communityId}
    </select>

    <select id="existsUserCommunity" resultType="boolean">
        SELECT COUNT(1) > 0
        FROM user_community
        WHERE user_id = #{userId} AND community_id = #{communityId}
    </select>

    <insert id="insertUserCommunity">
        INSERT INTO user_community (user_id, community_id)
        VALUES (#{userId}, #{communityId})
    </insert>

    <delete id="deleteUserCommunity">
        DELETE FROM user_community
        WHERE user_id = #{userId} AND community_id = #{communityId}
    </delete>

</mapper>